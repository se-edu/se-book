
    var pageVueRenderFn = function anonymous(
) {
with(this){return _c('div',{attrs:{"id":"app"}},[_c('header',{attrs:{"sticky":""}},[_c('navbar',{attrs:{"placement":"top","type":"dark"},scopedSlots:_u([{key:"brand",fn:function(){return [_c('a',{staticClass:"navbar-brand",attrs:{"href":"https://se-education.org","title":"SE-EDU"}},[_c('span',[_c('span',{staticClass:"fas fa-chevron-circle-left",attrs:{"aria-hidden":"true"}}),_v(" "),_c('strong',[_c('strong',[_v("SE-EDU")])])])])]},proxy:true},{key:"right",fn:function(){return [_c('li',{staticClass:"nav-link"},[_c('form',{staticClass:"navbar-form"},[_c('searchbar',{attrs:{"data":searchData,"placeholder":"Search","on-hit":searchCallback,"menu-align-right":""}})],1)])]},proxy:true}])},[_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/se-book/index.html"}},[_c('span',[_c('strong',[_v("Home")])])])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/se-book/about/acknowledgements.html"}},[_c('span',[_c('strong',[_v("About")])])])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"https://github.com/se-edu/se-book"}},[_c('span',[_c('span',{staticClass:"fab fa-github",attrs:{"aria-hidden":"true"}})])])])])],1),_v(" "),_c('div',{attrs:{"id":"flex-body"}},[_c('overlay-source',{staticClass:"fixed-header-padding",attrs:{"id":"site-nav","tag-name":"nav","to":"site-nav"}},[_c('div',{staticClass:"nav-component slim-scroll"},[_c('site-nav',[_c('overlay-source',{staticClass:"site-nav-list site-nav-list-root",attrs:{"tag-name":"ul","to":"mb-site-nav"}},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_v("About this book")]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/about/acknowledgements.html"}},[_v("About")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/about/usage.html"}},[_v("How to use this book")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_v("Software engineering")]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/softwareEngineering/index.html"}},[_v("Software engineering")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_v("Object-oriented programming")]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/oop/index.html"}},[_v("Object-oriented programming")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_v("Requirements")]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/requirements/index.html"}},[_v("Requirements")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/gatheringRequirements/index.html"}},[_v("Gathering requirements")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/specifyingRequirements/index.html"}},[_v("Specifying requirements")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_v("Design")]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/design/index.html"}},[_v("Design")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/designFundamentals/index.html"}},[_v("Design fundamentals")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/modeling/index.html"}},[_v("Modeling")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/architecture/index.html"}},[_v("Architecture")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/designPatterns/index.html"}},[_v("Design patterns")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/designApproaches/index.html"}},[_v("Design approaches")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_v("Implementation")]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/ides/index.html"}},[_v("IDEs")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/codeQuality/index.html"}},[_v("Code quality")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/refactoring/index.html"}},[_v("Refactoring")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/documentation/index.html"}},[_v("Documentation")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/errorHandling/index.html"}},[_v("Error handling")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/integration/index.html"}},[_v("Integration")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/reuse/index.html"}},[_v("Reuse")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_v("Quality assurance")]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/qualityAssurance/index.html"}},[_v("Quality assurance")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/testing/index.html"}},[_v("Testing")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/testCaseDesign/index.html"}},[_v("Test case design")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_v("Project management")]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/revisionControl/index.html"}},[_v("Revision control")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/projectPlanning/index.html"}},[_v("Project planning")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/teamwork/index.html"}},[_v("Teamwork")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/processModels/index.html"}},[_v("SDLC process models")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_v("Tools")]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/uml/index.html"}},[_v("UML")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/intellij/index.html"}},[_v("IntelliJ IDEA")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/gitAndGithub/index.html"}},[_v("Git and GitHub")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_v("Principles")]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/principles/index.html"}},[_v("Principles")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_v("Supplementary")]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/cppToJava/index.html"}},[_v("C++ to Java")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/combined/exercises.html"}},[_c('strong',[_v("Combined exercises")])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/common/definitions.html"}},[_c('strong',[_v("List of definitions")])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/common/references.html"}},[_c('strong',[_v("List of references")])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/common/outcomes.html"}},[_c('strong',[_v("List of learning outcomes")])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/se-book/common/print.html"}},[_c('strong',[_v("Printable version")])])])])])],1)],1)]),_v(" "),_c('div',{staticClass:"fixed-header-padding",attrs:{"id":"content-wrapper"}},[_m(0),_v(" "),_c('p'),_c('div',[_c('link',{attrs:{"rel":"stylesheet","href":"/se-book/css/textbook.css"}}),_v(" "),_c('div',{staticClass:"website-content"},[_m(1),_c('p'),_c('p'),_v(" "),_c('p'),_v(" "),_c('div',[_c('div'),_c('p'),_v(" "),_m(2),_v(" "),_c('div',{attrs:{"id":"title-and-body"}},[_m(3),_v(" "),_c('div',{attrs:{"id":"main"}},[_c('div',[_c('p',[_v("Suppose you want to propose some changes to a GitHub repo (e.g., "),_c('a',{attrs:{"href":"https://github.com/se-edu/samplerepo-pr-practice"}},[_v("samplerepo-pr-practice")]),_v(") as a "),_c('trigger',{attrs:{"trigger":"click","for":"modal:githubPullRequests-rcsPullRequests"}},[_v("pull request (PR)")]),_v(".")],1),_v(" "),_c('box',{attrs:{"type":"tip","seamless":""}},[_c('p',[_c('a',{attrs:{"href":"https://github.com/se-edu/samplerepo-pr-practice"}},[_v("samplerepo-pr-practice")]),_v(" is an unmonitored repo you can use to practice working with PRs. Feel free to send PRs to it.")])]),_v(" "),_c('p',[_v("Given below is a scenario you can try in order to learn how to create PRs:")]),_v(" "),_c('modal',{attrs:{"large":"","id":"modal:githubPullRequests-rcsPullRequests"},scopedSlots:_u([{key:"header",fn:function(){return [_v("Project Management → Revision Control → Remote Repositories →")]},proxy:true}])},[_v(" "),_c('div',[_c('p',[_c('strong',[_v("A "),_c('mark',[_c('em',[_v("pull request")])]),_v(" (PR for short) is a mechanism for contributing code to a remote repo,")]),_v(" i.e., \"I'm "),_c('em',[_v("requesting")]),_v(" you to "),_c('em',[_v("pull")]),_v(" my proposed changes to your repo\". For this to work, the two repos must have a shared history. The most common case is sending PRs from a fork to its "),_c('tooltip',{scopedSlots:_u([{key:"content",fn:function(){return [_c('em',[_v("upstream")]),_v(" repo is a repo you forked from")]},proxy:true}])},[_v("upstream")]),_v(" repo.")],1)])]),_v(" "),_m(4),_v(" "),_m(5),_v(" "),_m(6),_v(" "),_m(7),_v(" "),_c('p',[_c('strong',[_v("4. Push")]),_v(" the branch you updated (i.e., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch or the new branch) to your fork, as explained "),_c('trigger',{attrs:{"trigger":"click","for":"modal:createPr-pushBranch"}},[_v("here")]),_v(".")],1),_v(" "),_c('modal',{attrs:{"large":"","id":"modal:createPr-pushBranch"},scopedSlots:_u([{key:"header",fn:function(){return [_v("Git & GitHub → Remote Branches →")]},proxy:true}])},[_v(" "),_c('div',[_c('p',[_c('strong',[_v("Git branches in a local repo can be "),_c('em',[_v("linked")]),_v(" to a branch in a remote repo")]),_v(" so the local branch can 'track' the corresponding remote branch, and revision history contained in the local and the remote branch pair can be synchronized as desired.")]),_v(" "),_c('div',{attrs:{"id":"pushing-a-new-branch"}},[_c('p',[_c('strong',[_c('strong',[_v("[A] Pushing a new branch to a remote repo")])])]),_v(" "),_c('p',[_v("Let's see how you can push a branch that you created in your local repo to the remote repo. Note that this branch does not exist in the remote repo yet.")]),_v(" "),_c('p',[_v("Given below is how to push a branch named "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("add-intro")]),_v(" to your own fork named "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("samplerepo-pr-practice")]),_v(".")]),_v(" "),_c('p',[_v("We assume that your local repo already has the remote added to it with the name "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("origin")]),_v(". If that is not the case, you should first "),_c('trigger',{attrs:{"trigger":"click","for":"modal:remoteRepos-addRemoteForNormalPushing"}},[_v("configure your local repo to be able to communicate with the target remote repo")]),_v(".")],1),_v(" "),_c('modal',{attrs:{"large":"","id":"modal:remoteRepos-addRemoteForNormalPushing"},scopedSlots:_u([{key:"header",fn:function(){return [_v("Git & GitHub → Pull →")]},proxy:true}])},[_v(" "),_c('div',[_c('h5',{attrs:{"id":"working-with-multiple-remotes"}},[_c('span',{staticClass:"anchor",attrs:{"id":"working-with-multiple-remotes"}}),_v("Working with multiple remotes"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#working-with-multiple-remotes","onclick":"event.stopPropagation()"}})]),_v(" "),_c('p',[_c('strong',[_v("When you clone a repo, Git automatically adds a "),_c('em',[_v("remote")]),_v(" repo named "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("origin")])]),_v(" to your repo configuration. As you know, you can pull commits from that repo. As you know, "),_c('trigger',{attrs:{"trigger":"click","for":"modal:gitPull-rcsMultipleRepos"}},[_v("a Git repo can work with remote repos other than the one it was cloned from")]),_v(".")],1),_v(" "),_c('modal',{attrs:{"large":"","id":"modal:gitPull-rcsMultipleRepos"},scopedSlots:_u([{key:"header",fn:function(){return [_v("Project Management → Revision Control → Remote Repositories →")]},proxy:true}])},[_v(" "),_c('div',[_c('p',[_c('strong',[_v("A repo can work with any number of other repositories as long as they have a shared history")]),_v(" e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("repo1")]),_v(" can pull from (or push to) "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("repo2")]),_v(" and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("repo3")]),_v(" if they have a shared history between them.")])])]),_v(" "),_c('p',[_c('strong',[_v("To communicate with another remote repo, you can first add it as a "),_c('em',[_v("remote")]),_v(" of your repo")]),_v(". Here is an example scenario you can follow to learn how to pull from another repo:")]),_v(" "),_c('tabs',[_c('tab',{scopedSlots:_u([{key:"header",fn:function(){return [_v("Sourcetree")]},proxy:true}])},[_v(" "),_c('div',[_c('ol',[_c('li',[_c('p',[_v("Open the local repo in Sourcetree. Suggested: Use your local clone of the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("samplerepo-things")]),_v(" repo.")])]),_v(" "),_c('li',[_c('p',[_v("Choose "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Repository")]),_v(" → "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Repository Settings")]),_v(" menu option.")])]),_v(" "),_c('li',[_c('p',[_v("Add a new "),_c('em',[_v("remote")]),_v(" to the repo with the following values.")]),_v(" "),_c('pic',{attrs:{"src":"/se-book/gitAndGithub/pull/images/fillRemoteInfoForSourceTree.png","width":"450"}}),_v(" "),_c('ul',[_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Remote name")]),_v(": the name you want to assign to the remote repo e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("upstream1")])]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("URL/path")]),_v(": the URL of your repo (ending in "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v(".git")]),_v(") that. Suggested: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("https://github.com/se-edu/samplerepo-things-2.git")]),_v(" ("),_c('a',{attrs:{"href":"https://github.com/se-edu/samplerepo-things-2"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("samplerepo-things-2")])]),_v(" is another repo that has a shared history with "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("samplerepo-things")]),_v(")")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Username")]),_v(": your GitHub username"),_c('br'),_c('br')])])],1),_v(" "),_c('li',[_c('p',[_v("Now, you can fetch or pull (pulling will fetch the branch "),_c('em',[_v("and")]),_v(" merge the new code to the current branch) from the added repo as you did before "),_c('mark',[_v("but choose the remote name of the repo you want to pull from")]),_v(" (instead of "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("origin")]),_v("):"),_c('br'),_v("\nClick the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Fetch")]),_v(" button or the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Pull")]),_v(" button first."),_c('br'),_v(" "),_c('pic',{attrs:{"src":"/se-book/gitAndGithub/pull/images/sourcetree_3.png","height":"160"}})],1),_v(" "),_c('p'),_v(" "),_c('box',{attrs:{"type":"tip","seamless":""}},[_c('p',[_v("If the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Remote branch to pull")]),_v(" dropdown is empty, click the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Refresh")]),_v(" button on its right.")])])],1),_v(" "),_c('li',[_c('p',[_v("If the pull from the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("samplerepo-things-2")]),_v(" was successful, you should have received one more commit into your local repo.")])])])])]),_v(" "),_c('tab',{scopedSlots:_u([{key:"header",fn:function(){return [_v("CLI")]},proxy:true}])},[_v(" "),_c('div',[_c('ol',[_c('li',[_c('p',[_v("Navigate to the folder containing the local repo.")])]),_v(" "),_c('li',[_c('p',[_v("Set the new remote repo as a "),_c('em',[_v("remote")]),_v(" of the local repo."),_c('br'),_v("\ncommand: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git remote add {remote_name} {remote_repo_url}")]),_c('br'),_v("\ne.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git remote add upstream1 https://github.com/johndoe/foobar.git")])])]),_v(" "),_c('li',[_c('p',[_v("Now you can fetch or pull (pulling will fetch the branch "),_c('em',[_v("and")]),_v(" merge the new code to the current branch) from the new remote."),_c('br'),_v("\ne.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git fetch upstream1 master")]),_v(" followed by "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git merge upstream1/master")]),_v(", or,"),_c('br'),_v(" "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git pull upstream1 master")])])])])])])],1)],1)]),_v(" "),_c('tabs',[_c('tab',{scopedSlots:_u([{key:"header",fn:function(){return [_v("Sourcetree")]},proxy:true}])},[_v(" "),_c('div',[_c('ol',[_c('li',[_v("Click on "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Push")]),_v(" button, which opens up the Push dialog.")]),_v(" "),_c('li',[_v("Choose the remote that you wish to push the branch (assuming you've added that repo to your Sourcetree already).")]),_v(" "),_c('li',[_v("Select the branch(es) you want to push -- in this case, "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("add-intro")]),_v("."),_c('br'),_v("\nEnsure the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Track?")]),_v(" checkbox is ticked for the selected branch(es).")]),_v(" "),_c('li',[_v("Click "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Push")]),_v(".")])]),_v(" "),_c('pic',{attrs:{"src":"/se-book/gitAndGithub/remoteBranches/images/pushBranchToFork.png","height":"300"}}),_v(" "),_c('p')],1)]),_v(" "),_c('tab',{scopedSlots:_u([{key:"header",fn:function(){return [_v("CLI")]},proxy:true}])},[_v(" "),_c('div',[_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("$ git push -u origin add-intro\n")])])]),_c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("-u")]),_v(" (or "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("--update")]),_v(") flag tells Git that you wish the local branch to 'track' the remote branch that will be created as a result of this push.")]),_v(" "),_c('p',[_c('span',[_c('span',{staticClass:"fas fa-paperclip",attrs:{"aria-hidden":"true"}})]),_v(" See "),_c('a',{attrs:{"href":"https://git-scm.com/docs/git-push"}},[_v("git-scm.com/docs/git-push")]),_v(" for details of the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("push")]),_v(" command.")])])])],1)],1),_v(" "),_c('div',{attrs:{"id":"pulling-a-new-branch"}},[_c('p',[_c('strong',[_c('strong',[_v("[B] Pulling a remote branch for the first time")])])]),_v(" "),_c('p',[_v("Here, let's see how to fetch a new branch (i.e., it does not exist in your local repo yet) from a remote repo.")]),_v(" "),_c('tabs',[_c('tab',{scopedSlots:_u([{key:"header",fn:function(){return [_v("Sourcetree")]},proxy:true}])},[_v(" "),_c('div',[_c('p',[_c('strong',[_v("1. Check the list of remote branches")]),_v(" by expanding the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("REMOTES")]),_v(" menu on the left edge of Sourcetree. If the branch you expected to find is missing, you can click the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Fetch")]),_v(" button (in the top toolbar) to refresh the information shown under remotes.")]),_v(" "),_c('pic',{attrs:{"src":"/se-book/gitAndGithub/remoteBranches/images/listRemoteBranches.png"}}),_v(" "),_c('p'),_v(" "),_c('p',[_c('strong',[_v("2. Double-click the branch name")]),_v(" (e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("tweak-requirements")]),_v(" branch in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("myfork")]),_v(" remote), which should open the checkout dialog shown below.")]),_v(" "),_c('pic',{attrs:{"src":"/se-book/gitAndGithub/remoteBranches/images/checkoutBranchDialog.png"}}),_v(" "),_c('p'),_v(" "),_c('p',[_c('strong',[_v("3. Go with the default settings")]),_v(" (shown above) should be fine. Once you click "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("OK")]),_v(", the branch will appear in your local repo. Furthermore, that repo will switch to that branch, and the local branch will "),_c('tooltip',{scopedSlots:_u([{key:"content",fn:function(){return [_v("i.e., will be linked to")]},proxy:true}])},[_v("track")]),_v(" the remote branch as well.")],1)],1)]),_v(" "),_c('tab',{scopedSlots:_u([{key:"header",fn:function(){return [_v("CLI")]},proxy:true}])},[_v(" "),_c('div',[_c('p',[_c('strong',[_v("1. Fetch details from the remote.")]),_v(" e.g., if the remote is named "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("myfork")])]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("$ git fetch myfork\n")])])]),_c('p',[_c('strong',[_v("2. List the branches")]),_v(" to see the name of the branch you want to pull.")]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("$ git branch -a\n")])])]),_c('p',[_c('span',[_c('span',{staticClass:"fas fa-arrow-down",attrs:{"aria-hidden":"true"}})])]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("master\n")]),_c('span',[_v("remotes/myfork/master\n")]),_c('span',[_v("remotes/myfork/branch1\n")])])]),_c('p',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("-a")]),_v(" flag tells Git to list both local and remote branches.")]),_v(" "),_c('p',[_c('strong',[_v("3. Create a matching local branch and switch to it.")])]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("$ git switch -c branch1 myfork/branch1\n")])])]),_c('p',[_c('span',[_c('span',{staticClass:"fas fa-arrow-down",attrs:{"aria-hidden":"true"}})])]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("Switched to a new branch 'branch1'\n")]),_c('span',[_v("branch 'branch1' set up to track 'myfork/branch1'.\n")])])]),_c('p',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("-c")]),_v(" flag tells Git to create a new local branch.")])])])],1)],1),_v(" "),_c('div',{attrs:{"id":"syncing-branches"}},[_c('p',[_c('strong',[_c('strong',[_v("[C] Syncing branches")])])]),_v(" "),_c('p',[_v("In this section we assume that you have a local branch that is already tracking a remote branch (e.g., as a result of doing [A] or [B] above).")]),_v(" "),_c('p',[_c('strong',[_v("To push new changes in the local branch to the corresponding remote branch:")])]),_v(" "),_c('tabs',[_c('tab',{scopedSlots:_u([{key:"header",fn:function(){return [_v("Sourcetree")]},proxy:true}])},[_v(" "),_c('div',[_c('p',[_v("Similar to how you pushed a new branch (in [A]):")]),_v(" "),_c('pic',{attrs:{"src":"/se-book/gitAndGithub/remoteBranches/images/pushBranchToFork.png","height":"300"}}),_v(" "),_c('p')],1)]),_v(" "),_c('tab',{scopedSlots:_u([{key:"header",fn:function(){return [_v("CLI")]},proxy:true}])},[_v(" "),_c('div',[_c('p',[_v("Similar to [A] above, but omit the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("-u")]),_v(" flag. e.g.,")]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("$ git push origin add-intro\n")])])])])])],1),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_c('strong',[_v("If you push but the remote branch has new commits that you don't have locally")]),_v(", Git will abort the push and will ask you to pull first.")])]),_v(" "),_c('p',[_c('strong',[_v("To pull new changes from a remote branch to the corresponding local branch:")])]),_v(" "),_c('tabs',[_c('tab',{scopedSlots:_u([{key:"header",fn:function(){return [_v("Sourcetree")]},proxy:true}])},[_v(" "),_c('div',[_c('p',[_c('strong',[_v("1. Switch to the branch you want to update")]),_v(" by double-clicking the branch name. e.g.,")]),_v(" "),_c('pic',{attrs:{"src":"/se-book/gitAndGithub/branch/images/sourcetree_3.png"}}),_v(" "),_c('p'),_v(" "),_c('p',[_c('strong',[_v("2. Pull the updated in the remote branch to the local branch")]),_v(" by right-clicking on the branch name (in the same place as above), and choosing "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Pull <remote>/<branch> (tracked)")]),_v(" e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Pull myfork/add-intro (tracked)")]),_v(".")])],1)]),_v(" "),_c('tab',{scopedSlots:_u([{key:"header",fn:function(){return [_v("CLI")]},proxy:true}])},[_v(" "),_c('div',[_c('p',[_c('strong',[_v("1. Switch to the branch you want to update")]),_v(" using "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git checkout <branch>")]),_v(" e.g.,")]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("$ git checkout branch1\n")])])]),_c('p',[_c('strong',[_v("2. Pull the updated in the remote branch to the local branch")]),_v(", using "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git pull <remote> <branch>")]),_v(" e.g.,")]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("$ git pull origin branch1\n")])])])])])],1),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_c('strong',[_v("If you pull but your local branch has new commits the remote branch doesn't have")]),_v(", Git will automatically perform a merge between the local branch and the remote branch.")])]),_v(" "),_c('div'),_v(" "),_c('div',{attrs:{"id":"extras"}})],1)])]),_v(" "),_m(8),_v(" "),_c('ol',[_m(9),_v(" "),_c('li',[_c('p',[_v("Click on the "),_c('span',{staticClass:"tab"},[_c('span',{staticClass:"dimmed"},[_c('svg',{staticClass:"octicon octicon-git-pull-request",attrs:{"version":"1.1","width":"16","height":"16","viewBox":"0 0 16 16","aria-hidden":"true"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"}})])]),_v(" Pull requests")]),_v(" tab followed by the "),_c('span',{staticClass:"btn btn-success ps-1 pe-1 pb-0 pt-0"},[_v("New pull request")]),_v(" "),_c('strong',[_v("button")]),_v(". This will bring you to the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Compare changes")]),_v(" page.")])]),_v(" "),_c('li',[_c('p',[_v("Set the appropriate target repo and the branch that should receive your PR, using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("base repository")]),_v(" and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("base")]),_v(" dropdowns. e.g.,"),_c('br'),_v(" "),_c('span',{staticClass:"btn btn-light border"},[_v("base repository: "),_c('strong',[_v("se-edu/samplerepo-pr-practice")]),_v(" "),_c('svg',{staticClass:"octicon octicon-triangle-down",attrs:{"version":"1.1","width":"16","height":"16","viewBox":"0 0 16 16","aria-hidden":"true"}},[_c('path',{attrs:{"d":"M4.427 7.427l3.396 3.396a.25.25 0 00.354 0l3.396-3.396A.25.25 0 0011.396 7H4.604a.25.25 0 00-.177.427z"}})])]),_v(" "),_c('span',{staticClass:"btn btn-light border"},[_v("base: "),_c('strong',[_v("master")]),_v(" "),_c('svg',{staticClass:"octicon octicon-triangle-down",attrs:{"version":"1.1","width":"16","height":"16","viewBox":"0 0 16 16","aria-hidden":"true"}},[_c('path',{attrs:{"d":"M4.427 7.427l3.396 3.396a.25.25 0 00.354 0l3.396-3.396A.25.25 0 0011.396 7H4.604a.25.25 0 00-.177.427z"}})])]),_c('br')]),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_v("Normally, the default value shown in the dropdown is what you want but in case your fork has "),_c('popover',{scopedSlots:_u([{key:"content",fn:function(){return [_v("e.g., the repo you forked from is also a fork of a another repo, which means both of those are considered upstream repos of your fork")]},proxy:true}])},[_v("multiple upstream repos")]),_v(", the default may not be what you want.")],1)])],1),_v(" "),_c('li',[_c('p',[_v("Indicate which repo:branch contains your proposed code, using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("head repository")]),_v(" and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("compare")]),_v(" dropdowns. e.g.,"),_c('br'),_v(" "),_c('span',{staticClass:"btn btn-light border"},[_v("head repository: "),_c('strong',[_v("myrepo/samplerepo-pr-practice")]),_v(" "),_c('svg',{staticClass:"octicon octicon-triangle-down",attrs:{"version":"1.1","width":"16","height":"16","viewBox":"0 0 16 16","aria-hidden":"true"}},[_c('path',{attrs:{"d":"M4.427 7.427l3.396 3.396a.25.25 0 00.354 0l3.396-3.396A.25.25 0 0011.396 7H4.604a.25.25 0 00-.177.427z"}})])]),_v(" "),_c('span',{staticClass:"btn btn-light border"},[_v("compare: "),_c('strong',[_v("master")]),_v(" "),_c('svg',{staticClass:"octicon octicon-triangle-down",attrs:{"version":"1.1","width":"16","height":"16","viewBox":"0 0 16 16","aria-hidden":"true"}},[_c('path',{attrs:{"d":"M4.427 7.427l3.396 3.396a.25.25 0 00.354 0l3.396-3.396A.25.25 0 0011.396 7H4.604a.25.25 0 00-.177.427z"}})])]),_c('br')])])]),_v(" "),_c('p',[_c('strong',[_v("6. Verify the proposed code")]),_v(": Verify that the diff view in the page shows the exact change you intend to propose. If it doesn't, "),_c('tooltip',{scopedSlots:_u([{key:"content",fn:function(){return [_v("commit the new code and push to the branch")]},proxy:true}])},[_v("update the branch")]),_v(" as necessary.")],1),_v(" "),_m(10),_v(" "),_c('span',{attrs:{"id":"submit-the-pr"}},[_c('ol',[_m(11),_v(" "),_m(12),_v(" "),_c('li',[_c('p',[_v("If you want to indicate that the PR you are about to create is 'still work in progress, not yet ready', click on the dropdown arrow in the "),_c('span',{staticClass:"btn btn-success ps-1 pe-1 pb-0 pt-0"},[_v(" Create pull request "),_c('svg',{staticClass:"octicon octicon-triangle-down",attrs:{"version":"1.1","width":"16","height":"16","viewBox":"0 0 16 16","aria-hidden":"true"}},[_c('path',{attrs:{"d":"M4.427 7.427l3.396 3.396a.25.25 0 00.354 0l3.396-3.396A.25.25 0 0011.396 7H4.604a.25.25 0 00-.177.427z"}})])]),_v(" button and choose "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Create draft pull request")]),_v(" option.")])]),_v(" "),_c('li',[_c('p',[_v("Click the "),_c('span',{staticClass:"btn btn-success ps-1 pe-1 pb-0 pt-0"},[_v(" Create pull request "),_c('svg',{staticClass:"octicon octicon-triangle-down",attrs:{"version":"1.1","width":"16","height":"16","viewBox":"0 0 16 16","aria-hidden":"true"}},[_c('path',{attrs:{"d":"M4.427 7.427l3.396 3.396a.25.25 0 00.354 0l3.396-3.396A.25.25 0 0011.396 7H4.604a.25.25 0 00-.177.427z"}})])]),_v(" button to create the PR."),_c('br')])]),_v(" "),_m(13)])]),_c('p'),_v(" "),_m(14),_v(" "),_m(15),_v(" "),_m(16),_v(" "),_m(17),_v(" "),_m(18),_v(" "),_m(19),_v(" "),_m(20),_v(" "),_c('ol',[_m(21),_v(" "),_m(22),_v(" "),_c('li',[_v("The merge you are attempting will run into a merge conflict, due to the aforementioned conflicting code in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch.\nResolve the conflict manually (this topic is covered "),_c('trigger',{attrs:{"trigger":"click","for":"modal:createPr-mergeConflicts"}},[_v("elsewhere")]),_v("), and complete the merge.")],1),_v(" "),_m(23)]),_v(" "),_c('modal',{attrs:{"large":"","id":"modal:createPr-mergeConflicts"},scopedSlots:_u([{key:"header",fn:function(){return [_v("Git & GitHub → Dealing with merge conflicts →")]},proxy:true}])},[_v(" "),_c('div',[_c('p',[_c('span',{attrs:{"id":"title"}},[_v("Dealing with merge conflicts")])]),_v(" "),_c('p',[_c('span',{attrs:{"id":"prereqs"}})]),_v(" "),_c('p',[_c('span',{attrs:{"id":"outcomes"}},[_c('span',[_c('span',{staticClass:"fas fa-trophy",attrs:{"aria-hidden":"true"}})]),_v(" Can use Git to resolve merge conflicts")])]),_v(" "),_c('div',{attrs:{"id":"body"}},[_c('p',[_c('strong',[_v("Merge conflicts happen when you try to combine two incompatible versions")]),_v(" (e.g., merging a branch to another but each branch changed the same part of the code in a different way).")]),_v(" "),_c('p',[_v("Here are the steps to simulate a merge conflict and use it to learn how to resolve merge conflicts.")]),_v(" "),_c('p',[_c('strong',[_v("0. Create an empty repo or clone an existing repo")]),_v(", to be used for this activity.")]),_v(" "),_c('p',[_c('strong',[_v("1. Start a branch named "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("fix1")]),_v(" in the repo. Create a commit")]),_v(" that adds a line with some text to one of the files.")]),_v(" "),_c('p',[_c('strong',[_v("2. Switch back to "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch. Create a commit with a conflicting change")]),_v(" i.e. it adds a line with some different text in the exact location the previous line was added.")]),_v(" "),_c('pic',{attrs:{"src":"/se-book/gitAndGithub/mergeConflicts/images/sourcetree_1.png","height":"350"}}),_v(" "),_c('p'),_v(" "),_c('p',[_c('strong',[_v("3. Try to merge the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("fix1")]),_v(" branch onto the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch.")]),_v(" Git will pause mid-way during the merge and report a merge conflict. If you open the conflicted file, you will see something like this:")]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"class":"hljs txt"}},[_c('span',[_v("COLORS\n")]),_c('span',[_v("------\n")]),_c('span',[_v("blue\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"highlighted"}},[_v("<<<<<< HEAD")]),_v("\n")]),_c('span',[_v("black\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"highlighted"}},[_v("=======")]),_v("\n")]),_c('span',[_v("green\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"highlighted"}},[_v(">>>>>> fix1")]),_v("\n")]),_c('span',[_v("red\n")]),_c('span',[_v("white\n")])])]),_c('p',[_c('strong',[_v("4. Observe how the conflicted part is marked")]),_v(" between a line starting with "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("<<<<<< ")]),_v(" and a line starting with "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v(">>>>>>")]),_v(", separated by another line starting with "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("=======")]),_v(".")]),_v(" "),_c('p',[_v("Highlighted below is the conflicting part that is coming from the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch:")]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"style":"counter-reset: line 2;","class":"line-numbers hljs txt"}},[_c('span',[_v("blue\n")]),_c('span',[_v("<<<<<< HEAD\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"highlighted"}},[_v("black")]),_v("\n")]),_c('span',[_v("=======\n")]),_c('span',[_v("green\n")]),_c('span',[_v(">>>>>> fix1\n")]),_c('span',[_v("red\n")])])]),_c('p',[_v("This is the conflicting part that is coming from the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("fix1")]),_v(" branch:")]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"style":"counter-reset: line 2;","class":"line-numbers hljs txt"}},[_c('span',[_v("blue\n")]),_c('span',[_v("<<<<<< HEAD\n")]),_c('span',[_v("black\n")]),_c('span',[_v("=======\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"highlighted"}},[_v("green")]),_v("\n")]),_c('span',[_v(">>>>>> fix1\n")]),_c('span',[_v("red\n")])])]),_c('p',[_c('strong',[_v("5. Resolve the conflict by editing the file")]),_v(". Let us assume you want to keep both lines in the merged version. You can modify the file to be like this:")]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"class":"hljs txt"}},[_c('span',[_v("COLORS\n")]),_c('span',[_v("------\n")]),_c('span',[_v("blue\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"highlighted"}},[_v("black")]),_v("\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"highlighted"}},[_v("green")]),_v("\n")]),_c('span',[_v("red\n")]),_c('span',[_v("white\n")])])]),_c('p',[_c('strong',[_v("6. Stage the changes, and commit.")]),_v(" You have now successfully resolved the merge conflict.")])],1),_v(" "),_c('div',{attrs:{"id":"extras"}})])]),_v(" "),_c('panel',{attrs:{"expanded":""},scopedSlots:_u([{key:"header",fn:function(){return [_c('p',[_c('span',[_c('span',{staticClass:"fas fa-paperclip",attrs:{"aria-hidden":"true"}})]),_v(" Resources")])]},proxy:true}])},[_v(" "),_c('ul',[_c('li',[_c('a',{attrs:{"href":"https://help.github.com/articles/creating-a-pull-request/"}},[_v("GitHub's own documentation on creating a PR")])])])])],1),_v(" "),_c('div')])])])])]),_v(" "),_c('i',{staticClass:"fa fa-arrow-circle-up fa-lg d-print-none",attrs:{"id":"scroll-top-button","onclick":"handleScrollTop()","aria-hidden":"true"}}),_c('p')]),_v(" "),_c('overlay-source',{staticClass:"fixed-header-padding",attrs:{"id":"page-nav","tag-name":"nav","to":"page-nav"}},[_c('div',{staticClass:"nav-component slim-scroll"})])],1),_v(" "),_m(24)])}
};
    var pageVueStaticRenderFns = [function anonymous(
) {
with(this){return _c('h1',{attrs:{"id":"software-engineering-for-self-directed-learners"}},[_c('span',{staticClass:"anchor",attrs:{"id":"software-engineering-for-self-directed-learners"}}),_c('span',{staticClass:"text-dark"},[_c('small',[_c('strong',[_c('strong',[_v("Software Engineering for Self-Directed Learners »")])])])]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#software-engineering-for-self-directed-learners","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('span',{staticClass:"badge bg-light text-dark"},[_c('span',[_c('span',{staticClass:"dimmed"},[_c('span',[_c('span',[_c('span',{staticClass:"fas fa-trophy",attrs:{"aria-hidden":"true"}})]),_v(" Can create PRs on GitHub")])])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('span',{staticClass:"dimmed"},[_c('strong',[_c('span',[_v("Tools → Git and GitHub →\n")])])])])}
},function anonymous(
) {
with(this){return _c('div',[_c('h4',{attrs:{"id":"creating-prs"}},[_c('span',{staticClass:"anchor",attrs:{"id":"creating-prs"}}),_c('span',[_v("Creating PRs")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#creating-prs","onclick":"event.stopPropagation()"}})])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("1. Fork")]),_v(" the repo onto your GitHub account.")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("2. Clone")]),_v(" it onto your computer.")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("3. Commit")]),_v(" your changes e.g., add a new file with some contents and commit it.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('strong',[_v("Option A - Commit changes to the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch")])]),_v(" "),_c('li',[_c('strong',[_v("Option B - Commit to a new branch")]),_v(" e.g., create a branch named "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("add-intro")]),_v(" (remember to switch to the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch before creating a new branch) and add your commit to it.")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("5. Initiate the PR creation:")])])}
},function anonymous(
) {
with(this){return _c('li',[_c('p',[_v("Go to your fork.")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("7. Submit the PR:")])])}
},function anonymous(
) {
with(this){return _c('li',[_c('p',[_v("Click the "),_c('span',{staticClass:"btn btn-success ps-1 pe-1 pb-0 pt-0"},[_v("Create pull request")]),_v(" button.")])])}
},function anonymous(
) {
with(this){return _c('li',[_c('p',[_v("Fill in the PR name and description e.g.,"),_c('br'),_v("\nName: "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Add an introduction to the README.md")]),_c('br'),_v("\nDescription:")]),_v(" "),_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("Add some paragraph to the README.md to explain ...\n")]),_c('span',[_v("Also add a heading ...\n")])])])])}
},function anonymous(
) {
with(this){return _c('li',[_c('p',[_v("Go to the receiving repo to verify that your PR appears there in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Pull requests")]),_v(" tab.\n")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("The next step of the PR life cycle is the PR "),_c('em',[_v("review")]),_v(".")]),_v(" The members of the repo that received your PR can now review your proposed changes.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("If they like the changes, they can "),_c('em',[_v("merge")]),_v(" the changes to their repo, which also closes the PR automatically.")]),_v(" "),_c('li',[_v("If they don't like it at all, they can simply close the PR too i.e., they reject your proposed change.")]),_v(" "),_c('li',[_v("In most cases, they will add comments to the PR to suggest further changes. When that happens, GitHub will notify you.")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("You can update the PR along the way too.")]),_v(" Suppose PR reviewers suggested a certain improvement to your proposed code. To update your PR as per the suggestion, you can simply modify the code in your local repo, commit the updated code to the same branch as before, and push to your fork as you did earlier. The PR will auto-update accordingly.")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Sending PRs using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch is less common")]),_v(" than sending PRs using separate branches. For example, suppose you wanted to propose two bug fixes that are not related to each other. In that case, it is more appropriate to send two separate PRs so that each fix can be reviewed, refined, and merged independently. But if you send PRs using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch only, both fixes (and any other change you do in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch) will appear in the PRs you create from it.")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("To create another PR")]),_v(" while the current PR is still under review, create a new branch (remember to "),_c('mark',[_v("switch back to the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch first")]),_v("), add your new proposed change in that branch, and create a new PR following the steps given above.")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("It is possible to create PRs within the same repo")]),_v(" e.g., you can create a PR from branch "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("feature-x")]),_v(" to the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch, within the same repo. Doing so will allow the code to be reviewed by other developers (using PR review mechanism) before it is merged.")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Problem: merge conflicts")]),_v(" in ongoing PRs, indicated by the message "),_c('strong',[_c('span',{staticClass:"dimmed"},[_v("This branch has conflicts that must be resolved")])]),_v(". That means the upstream repo's "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch has been updated in a way that the PR code conflicts with that "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch. Here is the standard way to fix this problem:")])}
},function anonymous(
) {
with(this){return _c('li',[_v("Pull the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch from the upstream repo to your local repo."),_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("git checkout master\n")]),_c('span',[_v("git pull upstream master\n")])])])])}
},function anonymous(
) {
with(this){return _c('li',[_v("In the local repo, and attempt to merge the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch (that you updated in the previous step) onto the PR branch, in order to bring over the new code in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch to your PR branch."),_c('pre',[_c('code',{pre:true,attrs:{"class":"no-line-numbers hljs"}},[_c('span',[_v("git checkout pr-branch  # assuming pr-branch is the name of branch in the PR\n")]),_c('span',[_v("git merge master\n")])])])])}
},function anonymous(
) {
with(this){return _c('li',[_v("Push the PR branch to your fork. As the updated code in that branch no longer is conflicting with the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch, the merge conflict alert in the PR will go away automatically.")])}
},function anonymous(
) {
with(this){return _c('footer',[_c('div',{staticClass:"text-center"},[_c('small',[_v("["),_c('span',[_c('strong',[_v("Powered by")])]),_v(" "),_c('img',{attrs:{"src":"https://markbind.org/favicon.ico","width":"30"}}),_v(" "),_c('a',{attrs:{"href":"https://markbind.org/"}},[_v("MarkBind 4.1.0")]),_v(", generated on Sun, 9 Jul 2023, 23:43:23 GMT+8]")])])])}
}];
  